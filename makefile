SRC_SV := src/datapath.sv        \
          src/controller.sv      \
          src/store_buffer_top.sv          \
          test/tb_store_buffer_top.sv
DEFS:= defines/*.svh

DEFINES_VER := src/defines/verilator.svh

COMP_OPTS_SV := --incr --relax

TB_TOP := tb_store_buffer_top
MODULE := tb_store_buffer_top

WORK_DIR = work

#----------------------#
#----- MODEL SIM ------#
#----------------------#

vsim: vsim_compile simulate

# Create a working library and compile source files
vsim_compile: $(wildcard *.sv)
	@echo "Creating work library..."
	vlib $(WORK_DIR)
	@echo "Compiling source files..."
	vlog -work $(WORK_DIR) $(SRC_SV)

# Run the simulation and generate WLF file
simulate: vsim_compile
	@echo "Running simulation..."
	vsim -L $(WORK_DIR) $(MODULE) -do "add wave -radix Unsigned sim:/$(MODULE)/DUT/*; run -all"

#----------------------#
#----- ICARUS VERILOG --#
#----------------------#

# Compile and simulate using Icarus Verilog
.PHONY: iverilog
iverilog: $(SRC_SV)
	@echo
	@echo "### COMPILING WITH ICARUS VERILOG ###"
	iverilog -g2012 -o $(TB_TOP).vvp $(SRC_SV)

# Run the simulation using Icarus Verilog and generate a VCD waveform file
.PHONY: vvp
vvp: iverilog
	@echo
	@echo "### RUNNING SIMULATION WITH VVP ###"
	vvp $(TB_TOP).vvp

# View the waveform generated by Icarus Verilog
.PHONY: view_wave
view_wave: vvp
	@echo
	@echo "### VIEWING WAVEFORM WITH GTKWave ###"
	gtkwave dump.vcd &

# Clean up all generated files
.PHONY : clean
clean :
	@echo "Cleaning up..."
	rm -rf $(WORK_DIR) transcript vsim.wlf
	rm -rf *.jou *.log *.pb *.wdb xsim.dir *.str
	rm -rf .*.timestamp *.tcl *.vcd .*.verilate
	rm -rf obj_dir .Xil $(TB_TOP).vvp
